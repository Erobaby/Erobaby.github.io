<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Erobaby的博客</title>
  <subtitle>一个欢乐的搬砖工</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://erobaby.me/"/>
  <updated>2017-10-04T10:01:13.000Z</updated>
  <id>http://erobaby.me/</id>
  
  <author>
    <name>Erobaby</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>防止搬瓦工被封的注意事项</title>
    <link href="http://erobaby.me/2017/10/04/%E9%98%B2%E6%AD%A2%E6%90%AC%E7%93%A6%E5%B7%A5%E8%A2%AB%E5%B0%81%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://erobaby.me/2017/10/04/防止搬瓦工被封的注意事项/</id>
    <published>2017-10-04T09:35:30.000Z</published>
    <updated>2017-10-04T10:01:13.000Z</updated>
    
    <content type="html">&lt;p&gt;善哉善哉，南无阿弥陀佛&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;更新系统&quot;&gt;&lt;a href=&quot;#更新系统&quot; class=&quot;headerlink&quot; title=&quot;更新系统&quot;&gt;&lt;/a&gt;更新系统&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;yum update -y&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;禁用邮件端口&quot;&gt;&lt;a href=&quot;#禁用邮件端口&quot; class=&quot;headerlink&quot; title=&quot;禁用邮件端口&quot;&gt;&lt;/a&gt;禁用邮件端口&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果服务器被用来发送垃圾邮件，分分钟被封。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;iptables -A OUTPUT -p tcp -m multiport --dport 24,25,50,57,105,106,109,110,143,158,209,218,220,465,587 -j REJECT --reject-with tcp-reset&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iptables -A OUTPUT -p tcp -m multiport --dport 993,995,1109,24554,60177,60179 -j REJECT --reject-with tcp-reset&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iptables -A OUTPUT -p udp -m multiport --dport 24,25,50,57,105,106,109,110,143,158,209,218,220,465,587 -j DROP&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iptables -A OUTPUT -p udp -m multiport --dport 993,995,1109,24554,60177,60179 -j DROP&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保存规则：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;iptables-save &amp;gt; /etc/sysconfig/iptables&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  实际上到这一步已经足够，重启会生效。但是如果没有保存到默认的配置文件，就需要使用下面的命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;恢复规则：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;iptables-restore &amp;gt; /etc/sysconfig/iptables&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  若想开机自动启用脚本，则可以使用以下命令放到系统初始化Shell脚本/etc/rc.d/rc.local中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;echo &amp;#39;/sbin/iptables-restore /etc/sysconfig/iptables&amp;#39;  &amp;gt;&amp;gt; /etc/rc.d/rc.local&lt;/code&gt;&lt;br&gt;  此外使用 #service iptables save，会将规则保存到/etc/sysconfig/iptables，用此命令保存的规则开机会自动生效，所以为了统一期间，建议以后规则都保存在/etc/sysconfig/iptables下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看iptables规则：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;iptables -L&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;使用ss时，不要勾选允许来自局域网的连接&quot;&gt;&lt;a href=&quot;#使用ss时，不要勾选允许来自局域网的连接&quot; class=&quot;headerlink&quot; title=&quot;使用ss时，不要勾选允许来自局域网的连接&quot;&gt;&lt;/a&gt;使用ss时，不要勾选允许来自局域网的连接&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;如果是公网IP，容易被人扫到做坏事导致被封。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;尽可能的本分&quot;&gt;&lt;a href=&quot;#尽可能的本分&quot; class=&quot;headerlink&quot; title=&quot;尽可能的本分&quot;&gt;&lt;/a&gt;尽可能的本分&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;有人用它DDoS别人，被搬瓦工识别为VPS受到DDoS攻击，然后被封。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;转载自 &lt;a href=&quot;http://blog.csdn.net/letuscc/article/details/53382967&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/letuscc/article/details/53382967&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;善哉善哉，南无阿弥陀佛&lt;br&gt;
    
    </summary>
    
      <category term="和谐" scheme="http://erobaby.me/categories/%E5%92%8C%E8%B0%90/"/>
    
    
      <category term="和谐" scheme="http://erobaby.me/tags/%E5%92%8C%E8%B0%90/"/>
    
  </entry>
  
  <entry>
    <title>SSH免密码登陆</title>
    <link href="http://erobaby.me/2017/10/04/SSH%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E9%99%86/"/>
    <id>http://erobaby.me/2017/10/04/SSH免密码登陆/</id>
    <published>2017-10-04T09:04:54.000Z</published>
    <updated>2017-10-04T12:10:10.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;两种方式: 使用ssh-copy-id命令和手动上传公钥&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;方法一-推荐&quot;&gt;&lt;a href=&quot;#方法一-推荐&quot; class=&quot;headerlink&quot; title=&quot;方法一(推荐)&quot;&gt;&lt;/a&gt;方法一(推荐)&lt;/h2&gt;&lt;p&gt;使用下例中ssky-keygen和ssh-copy-id，仅需通过3个步骤的简单设置而无需输入密码就能登录远程Linux主机。&lt;/p&gt;
&lt;p&gt;ssh-keygen 创建公钥和密钥。&lt;br&gt;ssh-copy-id 把本地主机的公钥复制到远程主机的authorized_keys文件上。&lt;br&gt;ssh-copy-id 也会给远程主机的用户主目录（home）和~/.ssh, 和~/.ssh/authorized_keys设置合适的权限 。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;步骤1: 用 ssh-key-gen 在本地主机上创建公钥和密钥&lt;br&gt; ligh@local-host$ ssh-keygen -t  rsa&lt;br&gt; Enter file in which to save the key (/home/jsmith/.ssh/id_rsa):[Enter key]&lt;br&gt; Enter passphrase (empty for no passphrase): [Press enter key]&lt;br&gt; Enter same passphrase again: [Pess enter key]&lt;br&gt; Your identification has been saved in /home/jsmith/.ssh/id_rsa.&lt;br&gt; Your public key has been saved in /home/jsmith/.ssh/id_rsa.pub.&lt;br&gt; The key fingerprint is: 33:b3:fe:af:95:95:18:11:31:d5:de:96:2f:f2:35:f9&lt;br&gt; ligh@local-host&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤2: 用 ssh-copy-id 把公钥复制到远程主机上&lt;br&gt; ligh@local-host$ ssh-copy-id -i ~/.ssh/id_rsa.pub  root@192.168.0.3&lt;br&gt; ligh@remote-host‘s password:&lt;br&gt; Now try logging into the machine, with ―ssh ?remote-host‘‖, and check in:&lt;br&gt; .ssh/authorized_keys to make sure we haven‘t added extra keys that you weren‘t expecting.&lt;br&gt; [注: ssh-copy-id 把密钥追加到远程主机的 .ssh/authorized_key 上.]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤3: 直接登录远程主机&lt;br&gt; ligh@local-host$ ssh remote-host&lt;br&gt; Last login: Sun Nov 16 17:22:33 2008 from 192.168.1.2&lt;br&gt; [注: SSH 不会询问密码.]&lt;br&gt; ligh@remote-host$&lt;br&gt; [注: 你现在已经登录到了远程主机上]&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;方法二&quot;&gt;&lt;a href=&quot;#方法二&quot; class=&quot;headerlink&quot; title=&quot;方法二&quot;&gt;&lt;/a&gt;方法二&lt;/h2&gt;&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;就是为了让两个linux机器之间使用ssh不需要用户名和密码。采用了数字签名RSA或者DSA来完成这个操作&lt;/li&gt;
&lt;li&gt;模型分析&lt;br&gt; 假设 A （192.168.20.59）为客户机器，B（192.168.20.60）为目标机；&lt;br&gt; 要达到的目的：&lt;br&gt; A机器ssh登录B机器无需输入密码；&lt;br&gt; 加密方式选 rsa|dsa均可以，默认dsa&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;具体操作流程&quot;&gt;&lt;a href=&quot;#具体操作流程&quot; class=&quot;headerlink&quot; title=&quot;具体操作流程&quot;&gt;&lt;/a&gt;具体操作流程&lt;/h3&gt;&lt;p&gt;单向登陆的操作过程（能满足上边的目的）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登录A机器 &lt;/li&gt;
&lt;li&gt;ssh-keygen -t [rsa|dsa]，将会生成密钥文件和私钥文件 id_rsa,id_rsa.pub或id_dsa,id_dsa.pub&lt;/li&gt;
&lt;li&gt;将 .pub 文件复制到B机器的 .ssh 目录， 并 cat id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&lt;/li&gt;
&lt;li&gt;大功告成，从A机器登录B机器的目标账户，不再需要密码了；（直接运行 #ssh 192.168.20.60）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;转载自 &lt;a href=&quot;http://blog.csdn.net/bravezhe/article/details/7302800&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/bravezhe/article/details/7302800&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;两种方式: 使用ssh-copy-id命令和手动上传公钥&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://erobaby.me/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://erobaby.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>常用正则表达式</title>
    <link href="http://erobaby.me/2016/06/18/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://erobaby.me/2016/06/18/常用正则表达式/</id>
    <published>2016-06-18T15:16:18.000Z</published>
    <updated>2017-10-03T12:57:53.000Z</updated>
    
    <content type="html">&lt;p&gt;正则表达式——古老而又强大的文本处理工具。仅用一段简短的表达式语句，就能快速地实现一个复杂的业务逻辑。掌握正则表达式，让你的开发效率有一个质的飞跃。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;校验密码强度&lt;br&gt;密码的强度必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间&lt;br&gt;&lt;code&gt;^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;校验中文&lt;br&gt;字符串只能是中文&lt;br&gt;&lt;code&gt;^[\\u4e00-\\u9fa5]{0,}$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由数字，26个英文字母或下划线组成的字符串&lt;br&gt;&lt;code&gt;^\\w+$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;校验E-Mail 地址&lt;br&gt;&lt;code&gt;[\\w!#$%&amp;amp;&amp;#39;*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&amp;amp;&amp;#39;*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;校验身份证号码&lt;br&gt;15位：&lt;br&gt;&lt;code&gt;^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$&lt;/code&gt;&lt;br&gt;18位：&lt;br&gt;&lt;code&gt;^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;校验日期&lt;br&gt;“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年&lt;br&gt;&lt;code&gt;^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;校验金额&lt;br&gt;金额校验，精确到2位小数&lt;br&gt;&lt;code&gt;^[0-9]+(.[0-9]{2})?$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;校验手机号&lt;br&gt;下面是国内 13、15、18开头的手机号正则表达式&lt;br&gt;&lt;code&gt;^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;判断IE的版本&lt;br&gt;&lt;code&gt;^.*MSIE [5-8](?:\\.[0-9]+)?(?!.*Trident\\/[5-9]\\.0).*$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;校验IP-v4地址&lt;br&gt;&lt;code&gt;\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;校验IP-v6地址&lt;br&gt;&lt;code&gt;(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;检查URL的前缀&lt;br&gt;&lt;code&gt;if (!s.match(/^[a-zA-Z]+:\\/\\//)){
s = &amp;#39;http://&amp;#39; + s;}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提取URL链接&lt;br&gt;&lt;code&gt;^(f|ht){1}(tp|tps):\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&amp;amp;=]*)?&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文件路径及扩展名校验&lt;br&gt;&lt;code&gt;^([a-zA-Z]\\:|\\\\)\\\\([^\\\\]+\\\\)*[^\\/:*?&amp;quot;&amp;lt;&amp;gt;|]+\\.txt(l)?$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提取Color Hex  Codes&lt;br&gt;&lt;code&gt;^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提取网页图片&lt;br&gt;&lt;code&gt;\\&amp;lt; *[img][^\\\\&amp;gt;]*[src] *= *[\\&amp;quot;\\&amp;#39;]{0,1}([^\\&amp;quot;\\&amp;#39;\\ &amp;gt;]*)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提取页面超链接&lt;br&gt;&lt;code&gt;(&amp;lt;a\\s*(?!.*\\brel=)[^&amp;gt;]*)(href=&amp;quot;https?:\\/\\/)((?!(?:(?:www\\.)?&amp;#39;.implode(&amp;#39;|(?:www\\.)?&amp;#39;, $follow_list).&amp;#39;))[^&amp;quot;]+)&amp;quot;((?!.*\\brel=)[^&amp;gt;]*)(?:[^&amp;gt;]*)&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查找CSS属性&lt;br&gt;&lt;code&gt;^\\s*[a-zA-Z\\-]+\\s*[:]{1}\\s[a-zA-Z0-9\\s.#]+[;]{1}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;抽取注释&lt;br&gt;&lt;code&gt;&amp;lt;!--(.*?)--&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;匹配HTML标签&lt;br&gt;&lt;code&gt;&amp;lt;\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:&amp;quot;.*?&amp;quot;|&amp;#39;.*?&amp;#39;|[\\^&amp;#39;&amp;quot;&amp;gt;\\s]+))?)+\\s*|\\s*)\\/?&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;正则表达式——古老而又强大的文本处理工具。仅用一段简短的表达式语句，就能快速地实现一个复杂的业务逻辑。掌握正则表达式，让你的开发效率有一个质的飞跃。&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://erobaby.me/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="其他" scheme="http://erobaby.me/categories/%E7%BC%96%E7%A8%8B/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="正则表达式" scheme="http://erobaby.me/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>NPM入门教程</title>
    <link href="http://erobaby.me/2016/05/22/NPM%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://erobaby.me/2016/05/22/NPM入门教程/</id>
    <published>2016-05-22T15:47:40.000Z</published>
    <updated>2017-10-03T13:10:12.000Z</updated>
    
    <content type="html">&lt;p&gt;NPM作为Node的模块管理和发布工具，作用与Ruby的gem、Python的pypl或setuptools、PHP的pear和.Net的Nuget一样。在当前前端工程化极速狂奔的年代，即使不做nodejs的开发，也需要学习和使用NPM的，谁叫grunt、bower、yeoman这一堆的工具都通过NPM发布呢？&lt;/p&gt;
&lt;p&gt;本文为针对非nodejs的开发者整理的NPM使用说明。当然最好的教程还是&lt;a href=&quot;https://docs.npmjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是包&quot;&gt;&lt;a href=&quot;#什么是包&quot; class=&quot;headerlink&quot; title=&quot;什么是包&quot;&gt;&lt;/a&gt;什么是包&lt;/h3&gt;&lt;p&gt;odejs以包的形式组织程序模块，而包的定义却十分简单——包含文件内容符合规范package.json文件的目录或归档文件。并通过&lt;package-name&gt;@&lt;version&gt;来唯一标识每个包。&lt;/version&gt;&lt;/package-name&gt;&lt;/p&gt;
&lt;h3 id=&quot;灵魂-package-json&quot;&gt;&lt;a href=&quot;#灵魂-package-json&quot; class=&quot;headerlink&quot; title=&quot;灵魂 package.json&quot;&gt;&lt;/a&gt;灵魂 package.json&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/347002/201412/231712452182038.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;包的定义和NPM都围绕着package.json文件做文章，package.json文件其实就相当于JAVA中的MANIFEST.MF文件，用于存放模块的名称、版本、作者、机构、模块入口、依赖项等信息。首先我们通过&lt;code&gt;npm init&lt;/code&gt;命令在当前工作目录下以用户引导的方式创建一个全新的package.json文件。然后通过&lt;code&gt;npm help json&lt;/code&gt;命令打开帮助文档，并根据实际的项目需求自行初始化package.json的项目即可。下面将对基础配置项进行叙述。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;，必选项，表示模块名称。命名时不能包含js、node、和url中需要转义的字符，不能以.和_为开头。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;version&lt;/strong&gt;，必选项，表示模块的版本号。版本号以&lt;code&gt;主版本号(Major).副版本号(Minor).补丁版本号(Patch)&lt;/code&gt;构成（如1.2.0）。而engines、dependencies和devDependencies等配置项中可使用语义化版本号语法，具体如下：&lt;br&gt;注意：版本号格式不对的话，在执行npm install时会报警告哦！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.1.1&lt;/strong&gt;：精确下载安装1.1.1版本的包&lt;br&gt;&lt;strong&gt;&amp;gt;、&amp;lt;=、&amp;gt;、&amp;gt;=1.1.1&lt;/strong&gt;：分别表示下载安装大于、小于等于、大于等于1.1.1版本的包&lt;br&gt;&lt;strong&gt;1.0.1-1.1.1&lt;/strong&gt;：表示版本范围是包含1.0.1到1.1.1版本的包&lt;br&gt;&lt;strong&gt;~1.1.1&lt;/strong&gt;：表示尽量采用靠近1.1.1版本的包，但可用的包版本范围是1.1.1-0到1.1.x-x版本的包&lt;br&gt;&lt;strong&gt;~1.1&lt;/strong&gt;：表示下载安装1.1.x-x版本的包&lt;br&gt;&lt;strong&gt;~1&lt;/strong&gt;：表示下载安装1.x.x-x版本的包&lt;br&gt;&lt;strong&gt;^1.1.1&lt;/strong&gt;：表示包版本范围是1.1.1到1.x.x-x&lt;br&gt;&lt;strong&gt;^0.1.1&lt;/strong&gt;：表示包版本范围是1.1.1到1.1.x-x&lt;br&gt;&lt;strong&gt;^1.1&lt;/strong&gt;：表示包版本范围是1.1.x-x到1.x.x-x&lt;br&gt;&lt;strong&gt;^1&lt;/strong&gt;：表示包版本范围是1.x.x-x&lt;br&gt;&lt;strong&gt;空格、x、*&lt;/strong&gt;：表示任意版本即可&lt;br&gt;两个版本选择器间，空格表示and关系，||表示or关系。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;main&lt;/strong&gt;，必选项，模块入口文件相对路径（相对于模块根目录）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; description&lt;/strong&gt;，可选项，表示模块功能描述，显示在&lt;code&gt;npm search &amp;lt;package-name&amp;gt;&lt;/code&gt;中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;keywords&lt;/strong&gt;，可选项，数组类型，表示模块的关键字，显示在&lt;code&gt;npm search &amp;lt;package-name&amp;gt;&lt;/code&gt;中&lt;br&gt;&lt;strong&gt;author&lt;/strong&gt;，可选项，表示发起者信息。示例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;author&quot;&lt;/span&gt;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;fsjohnhuang&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://fsjohnhuang.cnblogs.com/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;engines&lt;/strong&gt;，可选项，依赖的node版本。示例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;engines&quot;&lt;/span&gt;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;node&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;= 0.8.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;repository&lt;/strong&gt;，可选项，源码托管地址。示例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;repository&quot;&lt;/span&gt;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;git&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;https://github.com/fsjohnhuang/iPromise.git&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;scripts&lt;/strong&gt;，可选项，自定义在cli中输入npm 时实际执行的程序。npm默认提供大量的script供我们调用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;dependencies&lt;/strong&gt;和&lt;strong&gt;devDependencies&lt;/strong&gt;，可选项，用于配置模块的生产环境依赖包和开发环境依赖包。当执行npm install时，npm会根据这两个配置项的值去下载安装相关的依赖包。两者的区别是devDependencies是模块开发过程的依赖包（如：grunt只在开发时有用的模块），并且当其他模块需要依赖当前模块时，当通过npm install &lt;package-name&gt;时会自动下载安装dependencies的包而不会下载devDependencies的包。&lt;/package-name&gt;&lt;/p&gt;
&lt;h3 id=&quot;NPM的配置信息&quot;&gt;&lt;a href=&quot;#NPM的配置信息&quot; class=&quot;headerlink&quot; title=&quot;NPM的配置信息&quot;&gt;&lt;/a&gt;NPM的配置信息&lt;/h3&gt;&lt;p&gt;现在我们对package.json有一定的了解了，现在就到理论+实践时间咯。在实践之前我们要先配置一下NPM的资源库（国内被墙，你懂的），内网用户还要配置一下网络代理地址等信息。&lt;/p&gt;
&lt;p&gt;查看部分配置信息——&lt;code&gt;npm config ls&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看所有配置信息——&lt;code&gt;npm config ls -l&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;修改配置信息的三种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;修改用户家目录的.npmrc文件（没有则新建一个）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过&lt;code&gt;npm config set &amp;lt;config&amp;gt; &amp;lt;config-value&amp;gt;&lt;/code&gt;命令；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;npm config set registry http://registry.npm.taobao.org/&lt;/code&gt;&lt;br&gt;&lt;code&gt;npm config set proxy http://proxy.com:8081/&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过–registry=&lt;registry-uri&gt;等命令可选项临时配置。&lt;/registry-uri&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;npm install grunt --registry=http://registry.npm.taobao.org&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;查找、安装-卸载、更新依赖包&quot;&gt;&lt;a href=&quot;#查找、安装-卸载、更新依赖包&quot; class=&quot;headerlink&quot; title=&quot;查找、安装/卸载、更新依赖包&quot;&gt;&lt;/a&gt;查找、安装/卸载、更新依赖包&lt;/h3&gt;&lt;p&gt;在安心玩耍之前我们要先了解一件事件，就是包的作用范围分为 &lt;strong&gt;全局&lt;/strong&gt; 和 &lt;strong&gt;本地&lt;/strong&gt; 两种。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全局&lt;/strong&gt;：用作在cli上直接调用，而无法在项目中通过require导入依赖包。如将grunt-cli安装到全局时，则可在cli中输入grunt调用了！&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g grunt-cli&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;cmd或shell中直接调用&lt;/p&gt;
&lt;p&gt;&lt;code&gt;grunt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本地&lt;/strong&gt;：用作在项目中通过require导入依赖包，供项目使用。&lt;/p&gt;
&lt;p&gt;那么全局和本地的依赖包到底是存放在哪里的呢？通过&lt;code&gt;npm root -g&lt;/code&gt;和&lt;code&gt;npm root&lt;/code&gt;可分别查看全局和本地的依赖包下载安装的绝对目录了。本地的依赖包会存放在当前项目根目录下的node_modules目录下。&lt;/p&gt;
&lt;p&gt;现在我们可以正式操作依赖包了！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;搜索阶段（操作远程资源库中的依赖包）&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;搜索依赖包，&lt;code&gt;npm search&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看依赖包的package.json信息，&lt;code&gt;npm view &amp;lt;package-name&amp;gt;&lt;/code&gt;。另外我们可以单独查看package.json某个配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;查看包的依赖关系：&lt;code&gt;npm view &amp;lt;package-name&amp;gt; dependencies&lt;/code&gt;&lt;br&gt;查看包的源文件地址：&lt;code&gt;npm view &amp;lt;package-name&amp;gt; repository.url&lt;/code&gt;&lt;br&gt;查看包所依赖的node版本号：&lt;code&gt;npm view &amp;lt;package-name&amp;gt; engines&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;查看本地包信息&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看当前项目的本地依赖包，&lt;code&gt;npm list&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看全局依赖包，&lt;code&gt;npm list -g&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看本地依赖包是否不是最新版，&lt;code&gt;npm outdated &amp;lt;package-name&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;安装/卸载，更新包&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装本地/全局依赖包，&lt;code&gt;npm install &amp;lt;package-name&amp;gt; / npm install -g &amp;lt;package-name&amp;gt;&lt;/code&gt;（这样会下载安装最新的包，若下载安装特定版本号的包则&lt;code&gt;npm install &amp;lt;package-name&amp;gt;@&amp;lt;version&amp;gt;&lt;/code&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;卸载本地/全局依赖包，&lt;code&gt;npm uninstall &amp;lt;package-name&amp;gt; / npm uninstall -g &amp;lt;package-name&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新本地/全局依赖包，&lt;code&gt;npm update &amp;lt;package-name&amp;gt; / npm update -g&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;发布包&quot;&gt;&lt;a href=&quot;#发布包&quot; class=&quot;headerlink&quot; title=&quot;发布包&quot;&gt;&lt;/a&gt;发布包&lt;/h3&gt;&lt;p&gt;站在使用者的角度，掌握上述章节的内容已经足够了，但当我们开发出好玩的项目而且又想和大家分享时，那么下面的内容就不得不了解了！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;注册一个registry帐号，&lt;code&gt;npm adduser&lt;/code&gt;，然后根据引导输入帐号、密码和邮箱地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;登录registry帐号，&lt;code&gt;npm login&lt;/code&gt; ，登录信息会保存在客户端。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发布项目，&lt;code&gt;npm publish&lt;/code&gt; 。（建议发布版本从1.0.0开始）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经过上述步骤我们就可发布模块了。但这个时候你也许会考虑到项目中部分目录和文件不应该被发布出去，应该有一个像.gitignore的文件来配置这些排除项。看来你猜对了，那就是.npmignore文件，不过npm做得更灵活一些！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;默认不带.npmignore文件，若项目中带.gitignore则使用.gitignore文件内容的配置项；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若带.npmignore文件则不使用.gitignore文件中的配置项；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;即使配置.npmignore文件，也无法排除package.json和README.* 文件；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NPM内置设定以下文件必须被排除&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.swp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;._&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.DS_Store&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.hg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.lock-wscript&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.svn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.wafpickle-*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CVS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm-debug.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;转载自：&lt;a href=&quot;http://www.cnblogs.com/fsjohnhuang/p/4178019.html&quot; title=&quot;view: Node魔法堂：NPM那个入门&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/fsjohnhuang/p/4178019.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;NPM作为Node的模块管理和发布工具，作用与Ruby的gem、Python的pypl或setuptools、PHP的pear和.Net的Nuget一样。在当前前端工程化极速狂奔的年代，即使不做nodejs的开发，也需要学习和使用NPM的，谁叫grunt、bower、yeoman这一堆的工具都通过NPM发布呢？&lt;/p&gt;
&lt;p&gt;本文为针对非nodejs的开发者整理的NPM使用说明。当然最好的教程还是&lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Node" scheme="http://erobaby.me/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>寄生兽</title>
    <link href="http://erobaby.me/2016/05/22/%E5%AF%84%E7%94%9F%E5%85%BD/"/>
    <id>http://erobaby.me/2016/05/22/寄生兽/</id>
    <published>2016-05-22T09:25:21.000Z</published>
    <updated>2017-10-03T12:58:28.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;新一，我查了【恶魔】这一词汇。与之最接近的生物，我觉得是人类，人类会残杀并捕食一切物种。我同伴的食谱中才不过一两种生物，算口味清淡的啦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;异种生物间 能够相互利用 相互厮杀&lt;br&gt;唯独无法相互理解&lt;br&gt;不 我们不能以自身的价值观去解读他人&lt;br&gt;自以为了解其他生物这种想法&lt;br&gt;其实是人类的自以为是&lt;br&gt;其他生物可能都不是人类的朋友&lt;br&gt;但是 就算不知是敌是友&lt;br&gt;它们都是值得尊重的共存者&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;保护生物是因为人类害怕孤独&lt;br&gt;保护环境是因为人类不想自我毁灭&lt;br&gt;人类从始自终都是在自我满足&lt;br&gt;但是我觉得这样也挺好&lt;br&gt;用人类的标准去批判人类是毫无意义的&lt;br&gt;所以 牺牲小我爱护地球这种话 根本就是自我矛盾&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;不自相残杀怎么好意思叫人类？几千年来不都是这样吗，突然停了下来人口才从70亿直奔80亿的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;罪？那是人类们以自己的标准任意决定的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;人类真矛盾，平时杀牛杀猪脸色都不会变，现在轮到自己了反而那么紧张。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;只是因为对人类有害的那种生物就没有生存的权利吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;一个是为了生存不择手段的物种，一个则在纯粹的战斗中体验着乐趣的物种；一个是没有帮手就会胆小如鼠的物种，一个是只剩一人也不慌不忙的物种；一个是把武器的力量当作自己的力量得意洋洋的物种，一个是赤手空拳只相信自己能力的物种……到底什么叫丑陋什么叫标准？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;我一直在思考，我究竟为什么降生到这个世界上，解开一个疑问，又会浮现下一个疑问。追寻起源，追寻终焉。思考的同时，只是在一步步地行走。或许走再远都只能看到同样的风景，或许放弃行走也是个不错的选择，即使被宣告一切就此结束，顶多觉得”哦是么”罢了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;总有一天，人类会意识到乱扔垃圾是比杀人更重的罪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;别只顾自身繁荣，多为整个生物圈想想，不然怎配被叫做万物灵长。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;别只顾自身繁荣，多为整个生物圈想想，不然怎配被叫做万物灵长。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;但凡［杀戮］世上没有生物能与人类匹敌。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;与其最后变卦，最初就别冠冕堂皇。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;某一天…在路上认识的…变成朋友的生物，突然死了，这个时候为什么会这么悲伤呢？因为人类就是这么空閒的动物！但是，这就是人类…最大的优点。内心有余暇的生物，是多么的美好啊！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;和寄生于人类承担着维持生态平衡的重任的我们相比的话，你们人类才是啃食地球的寄生虫！ 不，该叫寄生兽&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;在全体生物看来，我们人类大概才是毒，而他们才是药吧……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://o7kir08j3.bkt.clouddn.com/16-5-22/92465300.jpg&quot; alt=&quot;寄生兽&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;新一，我查了【恶魔】这一词汇。与之最接近的生物，我觉得是人类，人类会残杀并捕食一切物种。我同伴的食谱中才不过一两种生物，算口味清淡的啦&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="动漫" scheme="http://erobaby.me/categories/%E5%8A%A8%E6%BC%AB/"/>
    
      <category term="随笔" scheme="http://erobaby.me/categories/%E5%8A%A8%E6%BC%AB/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="动漫" scheme="http://erobaby.me/tags/%E5%8A%A8%E6%BC%AB/"/>
    
      <category term="随笔" scheme="http://erobaby.me/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
