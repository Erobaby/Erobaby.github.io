<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Erobaby Blog</title>
  <subtitle>做一个欢乐的搬砖工</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://erobaby.me/"/>
  <updated>2016-05-22T16:26:12.000Z</updated>
  <id>http://erobaby.me/</id>
  
  <author>
    <name>Erobaby</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NPM入门教程</title>
    <link href="http://erobaby.me/2016/05/22/NPM%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://erobaby.me/2016/05/22/NPM入门教程/</id>
    <published>2016-05-22T15:47:40.000Z</published>
    <updated>2016-05-22T16:26:12.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;NPM作为Node的模块管理和发布工具，作用与Ruby的gem、Python的pypl或setuptools、PHP的pear和.Net的Nuget一样。在当前前端工程化极速狂奔的年代，即使不做nodejs的开发，也需要学习和使用NPM的，谁叫grunt、bower、yeoman这一堆的工具都通过NPM发布呢？！&lt;/strong&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;the rest=&quot;&quot; of=&quot;&quot; contents=&quot;&quot; |=&quot;&quot; 余下全文=&quot;&quot;&gt;

&lt;p&gt;转载自&lt;a href=&quot;http://www.cnblogs.com/fsjohnhuang/p/4178019.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node魔法堂：NPM入了个门&lt;/a&gt;&lt;/p&gt;
&lt;div id=&quot;cnblogs_post_body&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;font-size: 18px; background-color: #888888;&quot;&gt;&lt;strong&gt;一、前言　　　　　　　　　　　　　　　　　　　　　　　　　　　　　&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp; NPM作为Node的模块管理和发布工具，作用与Ruby的gem、Python的pypl或setuptools、PHP的pear和.Net的Nuget一样。在当前前端工程化极速狂奔的年代，即使不做nodejs的开发，也需要学习和使用NPM的，谁叫grunt、bower、yeoman这一堆的工具都通过NPM发布呢？！&lt;br&gt;&lt;br&gt;&amp;nbsp; 本文为针对非nodejs的开发者整理的NPM使用说明。当然最好的教程还是官网的啦！&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;font-size: 18px; background-color: #888888;&quot;&gt;&lt;strong&gt;二、什么是包？　　　　　　　　　　　　　　　　　　　　　　　　　　&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp; nodejs以包的形式组织程序模块，而包的定义却十分简单——包含文件内容符合规范package.json文件的目录或归档文件。并通过&amp;lt;package-name&amp;gt;@&amp;lt;version&amp;gt;来唯一标识每个包。&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;font-size: 16px; background-color: #888888;&quot;&gt;&lt;strong&gt;三、灵魂——package.json　　　　　　　　　　　　　　　　　　　　　　　　&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;img src=&quot;http://images.cnitblog.com/blog/347002/201412/231712452182038.png&quot; alt=&quot;&quot;&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;&amp;nbsp; 包的定义和NPM都围绕着package.json文件做文章，package.json文件其实就相当于JAVA中的MANIFEST.MF文件，用于存放模块的名称、版本、作者、机构、模块入口、依赖项等信息。首先我们通过&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm init&lt;/span&gt;&amp;nbsp;命令在当前工作目录下以用户引导的方式创建一个全新的package.json文件。然后通过&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm help json&lt;/span&gt;&amp;nbsp;命令打开帮助文档，并根据实际的项目需求自行初始化package.json的项目即可。下面将对基础配置项进行叙述。&lt;br&gt;&lt;br&gt;&amp;nbsp; &lt;strong&gt;name&lt;/strong&gt;，必选项，表示模块名称。命名时不能包含js、node、和url中需要转义的字符，不能以.和_为开头。&lt;br&gt;&lt;br&gt;&amp;nbsp; &lt;strong&gt;version&lt;/strong&gt;，必选项，表示模块的版本号。版本号以&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;主版本号(Major).副版本号(Minor).补丁版本号(Patch)&lt;/span&gt;&amp;nbsp;构成（如1.2.0）。而engines、dependencies和devDependencies等配置项中可使用语义化版本号语法，具体如下：&lt;span style=&quot;color: #ff0000;&quot;&gt;（注意：版本号格式不对的话，在执行npm install时会报警告哦！&lt;/span&gt;）&lt;br&gt;&lt;br&gt;&amp;gt; &lt;strong&gt;1.1.1&lt;/strong&gt;：精确下载安装1.1.1版本的包&lt;br&gt;&amp;gt; &lt;strong&gt;&amp;gt;、&amp;lt;=、&amp;gt;、&amp;gt;=1.1.1&lt;/strong&gt;：分别表示下载安装大于、小于等于、大于等于1.1.1版本的包&lt;br&gt;&amp;gt; &lt;strong&gt;1.0.1-1.1.1&lt;/strong&gt;：表示版本范围是包含1.0.1到1.1.1版本的包&lt;br&gt;&amp;gt; &lt;strong&gt;~1.1.1&lt;/strong&gt;：表示尽量采用靠近1.1.1版本的包，但可用的包版本范围是1.1.1-0到1.1.x-x版本的包&lt;br&gt;&amp;gt; &lt;strong&gt;~1.1&lt;/strong&gt;：表示下载安装1.1.x-x版本的包&lt;br&gt;&amp;gt; &lt;strong&gt;~1&lt;/strong&gt;：表示下载安装1.x.x-x版本的包&lt;br&gt;&amp;gt; &lt;strong&gt;^1.1.1&lt;/strong&gt;：表示包版本范围是1.1.1到1.x.x-x&lt;br&gt;&amp;gt; &lt;strong&gt;^0.1.1&lt;/strong&gt;：表示包版本范围是1.1.1到1.1.x-x&lt;br&gt;&amp;gt; &lt;strong&gt;^1.1&lt;/strong&gt;：表示包版本范围是1.1.x-x到1.x.x-x&lt;br&gt;&amp;gt; &lt;strong&gt;^1&lt;/strong&gt;：表示包版本范围是1.x.x-x&lt;br&gt;&amp;gt; &lt;strong&gt;空格、x、*&lt;/strong&gt;：表示任意版本即可&lt;br&gt;&amp;gt; 两个版本选择器间，空格表示and关系，||表示or关系。&lt;br&gt;&lt;br&gt;&amp;nbsp; &lt;strong&gt;main&lt;/strong&gt;，必选项，模块入口文件相对路径（相对于模块根目录）。&lt;br&gt;&lt;br&gt;&lt;strong&gt;&amp;nbsp; description&lt;/strong&gt;，可选项，表示模块功能描述，显示在&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm search &amp;lt;package-name&amp;gt;&lt;/span&gt;&amp;nbsp;中&lt;br&gt;&lt;br&gt;&amp;nbsp; &lt;strong&gt;keywords&lt;/strong&gt;，可选项，数组类型，表示模块的关键字，显示在&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm search &amp;lt;package-name&amp;gt;&lt;/span&gt;&amp;nbsp;中&lt;br&gt;&amp;nbsp; &lt;strong&gt;author&lt;/strong&gt;，可选项，表示发起者信息。示例如下：&lt;br&gt;&lt;br&gt;&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;br&gt;&lt;pre&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;author&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;:{&lt;br&gt;    &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;: &lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;fsjohnhuang&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,&lt;br&gt;    &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;url&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;: &lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&lt;a href=&quot;http://fsjohnhuang.cnblogs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://fsjohnhuang.cnblogs.com/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;br&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&amp;nbsp; &lt;strong&gt;engines&lt;/strong&gt;，可选项，依赖的node版本。示例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;br&gt;&lt;pre&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;engines&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;:{&lt;br&gt;    &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;: &lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&amp;gt;= 0.8.0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;br&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&amp;nbsp; &lt;strong&gt;repository&lt;/strong&gt;，可选项，源码托管地址。示例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;br&gt;&lt;pre&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;repository&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;:{&lt;br&gt;    &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;: &lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,&lt;br&gt;    &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;url&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;: &lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&lt;a href=&quot;https://github.com/fsjohnhuang/iPromise.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/fsjohnhuang/iPromise.git&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;br&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&amp;nbsp; &lt;strong&gt;scripts&lt;/strong&gt;，可选项，自定义在cli中输入&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm &amp;lt;script&amp;gt;&lt;/span&gt;&amp;nbsp;时实际执行的程序。npm默认提供大量的script供我们调用。&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &lt;strong&gt;dependencies&lt;/strong&gt;和&lt;strong&gt;devDependencies&lt;/strong&gt;，可选项，用于配置模块的生产环境依赖包和开发环境依赖包。当执行npm install时，npm会根据这两个配置项的值去下载安装相关的依赖包。两者的区别是devDependencies是模块开发过程的依赖包（如：grunt只在开发时有用的模块），并且当其他模块需要依赖当前模块时，当通过npm install &amp;lt;package-name&amp;gt;时会自动下载安装dependencies的包而不会下载devDependencies的包。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size: 18px; background-color: #888888;&quot;&gt;&lt;strong&gt;四、NPM的配置信息　　　　　　　　　　　　　　　　　　　　　　　　&amp;nbsp;
&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 现在我们对package.json有一定的了解了，现在就到理论+实践时间咯。在实践之前我们要先配置一下NPM的资源库（国内被墙，你懂的），内网用户还要配置一下网络代理地址等信息。&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 查看部分配置信息——&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm config ls&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 查看所有配置信息——&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm config ls -l&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 修改配置信息的三种方式：&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 1. 修改用户家目录的.npmrc文件（没有则新建一个）；&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 2. 通过&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm config &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt; &amp;lt;config&amp;gt; &amp;lt;config-value&amp;gt;&lt;/span&gt;&amp;nbsp;命令；&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;br&gt;&lt;pre&gt;npm config &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt; registry http:&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;registry.npm.taobao.org/&lt;/span&gt;&lt;br&gt;npm config &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt; proxy http:&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;proxy.com:8081/&lt;/span&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&amp;nbsp; 3. 通过–registry=&amp;lt;registry-uri&amp;gt;等命令可选项临时配置。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;br&gt;&lt;pre&gt;npm install grunt –registry=http:&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;registry.npm.taobao.org&lt;/span&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size: 18px; background-color: #888888;&quot;&gt;&lt;strong&gt;五、查找、安装/卸载、更新依赖包　　　　　　　　　　　　　　　　　　&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 在安心玩耍之前我们要先了解一件事件，就是包的作用范围分为 &lt;strong&gt;全局&lt;/strong&gt; 和 &lt;strong&gt;本地&lt;/strong&gt; 两种。&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &lt;strong&gt;全局&lt;/strong&gt;：用作在cli上直接调用，而无法在项目中通过require导入依赖包。如将grunt-cli安装到全局时，则可在cli中输入grunt调用了！&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;br&gt;&lt;pre&gt;npm install -g grunt-cli&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&amp;nbsp;cmd或shell中直接调用&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;br&gt;&lt;pre&gt;&amp;gt; grunt&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&amp;nbsp; &lt;strong&gt;本地&lt;/strong&gt;：用作在项目中通过require导入依赖包，供项目使用。&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 那么全局和本地的依赖包到底是存放在哪里的呢？通过&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm root -g&lt;/span&gt;&amp;nbsp;和&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm root&lt;/span&gt;&amp;nbsp;可分别查看全局和本地的依赖包下载安装的绝对目录了。本地的依赖包会存放在当前项目根目录下的node_modules目录下。&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 现在我们可以正式操作依赖包了！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;nbsp; 搜索阶段（操作远程资源库中的依赖包）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 1. 搜索依赖包，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm search &amp;lt;package-name&amp;gt;&lt;/span&gt;&amp;nbsp;。&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 2. 查看依赖包的package.json信息，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm view &amp;lt;package-name&amp;gt;&lt;/span&gt;&amp;nbsp;。另外我们可以单独查看package.json某个配置。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;br&gt;&lt;pre&gt;查看包的依赖关系：&lt;code&gt;npm view &amp;amp;lt;package-name&amp;amp;gt; dependencies&lt;/code&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;br&gt;查看包的源文件地址：&lt;code&gt;npm view &amp;lt;/span&amp;gt;&amp;amp;lt;package-name&amp;amp;gt; repository.url&lt;/code&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;br&gt;查看包所依赖的node版本号：&lt;code&gt;npm view &amp;lt;/span&amp;gt;&amp;amp;lt;package-name&amp;amp;gt; engines&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&amp;nbsp; 查看本地包信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 1.&amp;nbsp;查看当前项目的本地依赖包，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm list&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 2.&amp;nbsp;查看全局依赖包，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm list -g&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 3. 查看本地依赖包是否不是最新版，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm outdated &amp;lt;package-name&amp;gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;nbsp; 安装/卸载，更新包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;1. 安装本地/全局依赖包，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm install &amp;lt;package-name&amp;gt;&lt;/span&gt;&amp;nbsp; / &amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm install -g &amp;lt;package-name&amp;gt;&lt;/span&gt; （这样会下载安装最新的包，若下载安装特定版本号的包则&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm install &amp;lt;package-name&amp;gt;@&amp;lt;version&amp;gt;&lt;/span&gt;&amp;nbsp;）&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;2. 卸载本地/全局依赖包，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm uninstall &amp;lt;package-name&amp;gt;&lt;/span&gt; /&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm uninstall -g &amp;lt;package-name&amp;gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;3. 更新本地/全局依赖包，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm update &amp;lt;package-name&amp;gt;&lt;/span&gt; /&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm update -g &amp;lt;package-name&amp;gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;background-color: #888888; font-size: 18px;&quot;&gt;&lt;strong&gt;六、发布包　　　　　　　　　　　　　　　　　　　　　　　　　　　　&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 站在使用者的角度，掌握上述章节的内容已经足够了，但当我们开发出好玩的项目而且又想和大家分享时，那么下面的内容就不得不了解了！&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 1. 注册一个registry帐号，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm adduser&lt;/span&gt; ，然后根据引导输入帐号、密码和邮箱地址。&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 2. 登录registry帐号，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm login&lt;/span&gt; ，登录信息会保存在客户端。&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 3. 发布项目，&amp;nbsp;&lt;span class=&quot;cnblogs_code&quot;&gt;npm publish&lt;/span&gt; 。（建议发布版本从1.0.0开始）&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 经过上述步骤我们就可发布模块了。但这个时候你也许会考虑到项目中部分目录和文件不应该被发布出去，应该有一个像.gitignore的文件来配置这些排除项。看来你猜对了，那就是.npmignore文件，不过npm做得更灵活一些！&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 1. 默认不带.npmignore文件，若项目中带.gitignore则使用.gitignore文件内容的配置项；&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 2. 若带.npmignore文件则不使用.gitignore文件中的配置项；&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 3. 即使配置.npmignore文件，也无法排除package.json和README.*文件；&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 4. NPM内置设定以下文件必须被排除&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a href=&quot;javascript:void(0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;&gt;&lt;/a&gt;; “复制代码”)&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;pre&gt;.&lt;em&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.swp&lt;br&gt;.&lt;/span&gt;&lt;/em&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.swp&lt;br&gt;._&lt;/span&gt;&lt;em&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;br&gt;.DS_Store&lt;br&gt;.git&lt;br&gt;.hg&lt;br&gt;.&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;lock&lt;/span&gt;-&lt;span style=&quot;color: #000000;&quot;&gt;wscript&lt;br&gt;.svn&lt;br&gt;.wafpickle&lt;/span&gt;-&lt;/em&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;br&gt;CVS&lt;br&gt;npm&lt;/span&gt;-debug.log&lt;/pre&gt;&lt;br&gt;&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a href=&quot;javascript:void(0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;&gt;&lt;/a&gt;; “复制代码”)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size: 18px; background-color: #888888;&quot;&gt;&lt;strong&gt;七、总结　　　　　　　　　　　　　　　　　　　　　　　　　　　　　&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 现在我们终于可以安心下载各种node依赖包来推进前端工程化的步伐了！&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 尊重原创，转载请注明来自：&lt;a href=&quot;http://www.cnblogs.com/fsjohnhuang/p/4178019.html&quot; title=&quot;view: Node魔法堂：NPM那个入门&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/fsjohnhuang/p/4178019.html&lt;/a&gt;^_^肥仔John&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size: 18px; background-color: #888888;&quot;&gt;&lt;strong&gt;八、参考　　　　　　　　　　　　　　　　　　　　　　　　　　 &amp;nbsp; &amp;nbsp;　　&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/linjiqin/p/3765772.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/linjiqin/p/3765772.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/nodejs-npm-install-config/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.infoq.com/cn/articles/nodejs-npm-install-config/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/msh-using-npm-manage-node.js-dependence&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.infoq.com/cn/articles/msh-using-npm-manage-node.js-dependence&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;/the&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;NPM作为Node的模块管理和发布工具，作用与Ruby的gem、Python的pypl或setuptools、PHP的pear和.Net的Nuget一样。在当前前端工程化极速狂奔的年代，即使不做nodejs的开发，也需要学习和使用NPM的，谁叫grunt、bower、yeoman这一堆的工具都通过NPM发布呢？！&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>寄生兽</title>
    <link href="http://erobaby.me/2016/05/22/%E5%AF%84%E7%94%9F%E5%85%BD/"/>
    <id>http://erobaby.me/2016/05/22/寄生兽/</id>
    <published>2016-05-22T09:25:21.000Z</published>
    <updated>2016-05-22T16:26:31.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;人类保护动物是害怕孤独&lt;/strong&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;the rest=&quot;&quot; of=&quot;&quot; contents=&quot;&quot; |=&quot;&quot; 余下全文=&quot;&quot;&gt;

&lt;p&gt;&lt;strong&gt;人类保护动物是害怕孤独&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;保护环境是不想自我毁灭&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;寄生于地球的人类&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;需要的或许真的是天敌吧&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://o7kir08j3.bkt.clouddn.com/16-5-22/92465300.jpg&quot; alt=&quot;寄生兽&quot;&gt;&lt;/p&gt;
&lt;/the&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;人类保护动物是害怕孤独&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="动漫" scheme="http://erobaby.me/tags/%E5%8A%A8%E6%BC%AB/"/>
    
      <category term="随笔" scheme="http://erobaby.me/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://erobaby.me/2016/04/02/hello-world/"/>
    <id>http://erobaby.me/2016/04/02/hello-world/</id>
    <published>2016-04-02T14:56:51.000Z</published>
    <updated>2016-05-22T16:25:27.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;Hello World&lt;/strong&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Hello World&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
